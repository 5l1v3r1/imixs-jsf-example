<?xml version="1.0" encoding="UTF-8"?>
<server description="new server">

    <!-- Enable features -->
    <featureManager>
        <feature>javaee-8.0</feature>
        <feature>mpOpenAPI-1.1</feature>
        <!-- 
        <feature>apiDiscovery-1.0</feature>
    	<feature>jaxrs-1.1</feature>
   		<feature>openapi-3.0</feature>
   		 -->
    </featureManager>

    <!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->
    
    <!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
         encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
         Then uncomment the keyStore element. -->
    <!--
    <keyStore password=""/> 
    -->
    
    <!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
        basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password, 
        generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element. 
        Then uncomment the user element. -->
    <basicRegistry id="basic" realm="BasicRealm"> 
        <!-- <user name="yourUserName" password="" />  --> 
    </basicRegistry>
    
    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint id="defaultHttpEndpoint"
                  httpPort="9080"
                  httpsPort="9443" />
                  
    <!-- Automatically expand WAR files and EAR files -->
    <applicationManager autoExpand="true"/>
 	
 	
    <!-- JDBC PostgreSQL driver -->
    <library id="postgresql-library">
        <fileset id="PostgreSQLFileset" dir="/opt/ol/wlp/lib"
                includes="postgresql-9.4.1212.jar"/>
    </library>
    <jdbcDriver id="postgresql-driver"
                javax.sql.XADataSource="org.postgresql.xa.PGXADataSource"
                javax.sql.ConnectionPoolDataSource="org.postgresql.ds.PGConnectionPoolDataSource"
                libraryRef="postgresql-library"/>

	<!-- imxisworkflow datapool -->
    <dataSource id="imixsworkflow"
                jndiName="jdbc/workflow"
                jdbcDriverRef="postgresql-driver"
                type="javax.sql.ConnectionPoolDataSource"
                transactional="true">
		<properties serverName="imixssample-db"
                    portNumber="5432"
                    databaseName="workflow-db"
                    user="postgres"
                    password="adminadmin"/>
    </dataSource>



	<!-- security realm -->    
	<basicRegistry id="basic" realm="imixsrealm">
	    <user name="admin" password="adminadmin" /> 
	    <user name="manfred" password="password" /> 
	    <user name="alex" password="password" /> 
	    <user name="anna" password="password" /> 
	    <user name="marty" password="password" /> 
	    <user name="melman" password="password" /> 
	    <user name="gloria" password="password" /> 
	    <user name="skipper" password="password" /> 
	    <user name="kowalski" password="password" /> 
	    <user name="private" password="password" /> 
	    <user name="rico" password="password" /> 
	   
	    <group name="org.imixs.ACCESSLEVEL.MANAGERACCESS">
	      <member name="admin" />
	    </group>
	
	    <group name="org.imixs.ACCESSLEVEL.AUTHORACCESS">
	      <member name="admin" />
	      <member name="alex" />
	      <member name="manfred" />
	      <member name="anna" />
	      <member name="anna" />
	      <member name="marty" />
	      <member name="melman" />
	      <member name="gloria" />
	      <member name="skipper" />
	      <member name="kowalski" />
	      <member name="private" />
	      <member name="rico" />
	    </group>
	
	   
	</basicRegistry>
  
  
  
</server>
